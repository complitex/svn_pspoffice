<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.complitex.pspoffice.person.registration.report.service.RegistrationReportBean">

    <resultMap id="RegistrationReport" type="org.complitex.pspoffice.person.registration.report.entity.RegistrationReport">
        <result column="object_id" property="id"/>
        <result column="last_name" property="lastName"/>
        <result column="first_name" property="firstName"/>
        <result column="middle_name" property="middleName"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
    </resultMap>

    <sql id="join">
        JOIN (SELECT address.`start_date` start_date, address.`end_date` end_date  FROM `person_attribute` ra
                      JOIN `registration` r ON ra.`value_id` = r.`object_id`
                      JOIN `registration_attribute` address ON (address.`object_id` = r.`object_id` AND address.`attribute_type_id` = 2100
                            AND address.`value_id` = #{addressId} AND address.`value_type_id`  =
                                    CASE #{addressEntity}
                                        WHEN 'room' THEN 2100
                                        WHEN 'apartment' THEN 2101
                                        WHEN 'building' THEN 2102
                                        ELSE 0
                                    END
                            )
              WHERE ra.`object_id` = p.`object_id` AND ra.`attribute_type_id` = 2006) adr
        JOIN `person_attribute` lna ON (lna.`status` = 'ACTIVE' AND lna.`object_id` = p.`object_id` AND lna.`attribute_type_id` = 2000)
        JOIN `last_name` ln ON ln.`id` = lna.`value_id`
        JOIN `person_attribute` fna ON (fna.`status` = 'ACTIVE' AND fna.`object_id` = p.`object_id` AND fna.`attribute_type_id` = 2001)
        JOIN `first_name` fn ON fn.`id` = fna.`value_id`
        JOIN `person_attribute` mna ON (mna.`status` = 'ACTIVE' AND mna.`object_id` = p.`object_id` AND mna.`attribute_type_id` = 2002)
        JOIN `middle_name` mn ON mn.`id` = mna.`value_id`
    </sql>

    <sql id="filter">
        <if test="id != null">
            AND p.`object_id` = #{id}
        </if>

        <if test="lastName != null">
            AND ln.`name` LIKE CONCAT('%', #{lastName}, '%')
        </if>
        <if test="firstName != null">
            AND fn.`name` LIKE CONCAT('%', #{firstName}, '%')
        </if>
        <if test="middleName != null">
            AND mn.`name` LIKE CONCAT('%', #{middleName}, '%')
        </if>
    </sql>

    <select id="getReport" resultMap="org.complitex.pspoffice.person.registration.report.service.RegistrationReportBean.RegistrationReport"
                parameterType="org.complitex.pspoffice.person.registration.report.example.RegistrationReportExample">
        SELECT p.`object_id`, ln.`name` last_name, fn.`name` first_name, mn.`name` middle_name, adr.`start_date`, adr.`end_date`
        FROM `person` p
            <include refid="org.complitex.pspoffice.person.registration.report.service.RegistrationReportBean.join"/>
        WHERE
        p.`status` IN ('ACTIVE', 'INACTIVE')
        <include refid="org.complitex.pspoffice.person.registration.report.service.RegistrationReportBean.filter"/>
        <include refid="org.complitex.pspoffice.person.registration.report.service.RegistrationReportBean.orderBy"/>
        <include refid="org.complitex.dictionary.entity.DomainObject.limit"/>
    </select>

    <select id="count" resultType="integer" parameterType="org.complitex.pspoffice.person.registration.report.example.RegistrationReportExample">
        SELECT COUNT(*) FROM `person` p
            <include refid="org.complitex.pspoffice.person.registration.report.service.RegistrationReportBean.join"/>
        WHERE
        p.`status` IN ('ACTIVE', 'INACTIVE')
        <include refid="org.complitex.pspoffice.person.registration.report.service.RegistrationReportBean.filter"/>
    </select>

    <sql id="orderBy">
        ORDER BY ${orderByExpression}
        <choose>
            <when test="asc">
                ASC
            </when>
            <otherwise>
                DESC
            </otherwise>
        </choose>
    </sql>

</mapper>
